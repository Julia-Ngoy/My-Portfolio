let swController; // Will be assigned the Service Worker registration

// LANDING SECTION ANIMATIONS
let landingBlocksHideClass = "hide-landing-block";
const introduceYourselBlock = document.querySelector(
  ".introduce-yourself-text"
);

const detailsAboutYourselfBlock = document.querySelector(
  ".details-about-yourself-text"
);

const landingSectionObserver = new IntersectionObserver((entries) => {
  for (let entry of entries) {
    if (entry.isIntersecting) {
      // Triggers the animation by removing the class that hide the blocks by default
      entry.target.classList.remove(landingBlocksHideClass);
    }
  }
});

landingSectionObserver.observe(introduceYourselBlock);
landingSectionObserver.observe(detailsAboutYourselfBlock);

// ABOUT SECTION ANIMATIONS
let aboutBlockHideClass = "hide-about-block";
const aboutTitleBlock = document.querySelector("#Skills h1");
const aboutMyCareerBlock = document.querySelector(".about-my-career");
const languagesAndTechsBlock = document.querySelector(
  ".languages-and-technologies"
);

const aboutSectionObserver = new IntersectionObserver((entries) => {
  for (let entry of entries) {
    if (entry.isIntersecting) {
      entry.target.classList.remove(aboutBlockHideClass);
    }
  }
});

aboutSectionObserver.observe(aboutTitleBlock);
aboutSectionObserver.observe(aboutMyCareerBlock);
aboutSectionObserver.observe(languagesAndTechsBlock);

// CONTACTS SECTION ANIMATION
let contactsBlockHideClass = "hide-contacts-block";
const contactsTitleBlock = document.querySelector("#contacts h1");
const textBlock = document.querySelector("#contacts .text");
const evenBlocks = document.querySelectorAll(".mean.even");
const oddBlocks = document.querySelectorAll(".mean.odd");

const contactsSectionObserver = new IntersectionObserver((entries) => {
  for (let entry of entries) {
    if (entry.isIntersecting) {
      entry.target.classList.remove(contactsBlockHideClass);
    }
  }
});

contactsSectionObserver.observe(contactsTitleBlock);
contactsSectionObserver.observe(textBlock);

for (let block of evenBlocks) {
  contactsSectionObserver.observe(block);
}

for (let block of oddBlocks) {
  contactsSectionObserver.observe(block);
}

// ADD SHADOW ON HEADER AS WE SCROLL
// AND REMOVE IT WHEN WE'VE STOPPED SCROLLING
const headerElt = document.querySelector("header");

window.addEventListener("scroll", () => {
  headerElt.classList.add("box-shadow");
});

window.addEventListener("scrollend", () => {
  headerElt.classList.remove("box-shadow");
});

// SHOW AND HIDE MENU ON MOBILE
const closeMobileMenuBtn = document.querySelector(".hide-menu-on-mobile");
const showMobileMenuBtn = document.querySelector(".mobile-menu-icon");
const menu = document.querySelector("header ul");

showMobileMenuBtn.addEventListener("click", (e) => {
  menu.classList.add("show");
});

closeMobileMenuBtn.addEventListener("click", (e) => {
  menu.classList.remove("show");
});


// FUNCTION TO WRITE A TEXT SPELLING IT - Generated by ChatGpt
let textToSpell = "an aspiring AI Engineer.";
const spellTextContainer = document.getElementById("text-to-spell");
function spellOutText(text, delay) {
  spellTextContainer.textContent = ""; // Clear the element

  let index = 0;

  function addLetter() {
    if (index < text.length) {
      spellTextContainer.textContent += text[index];
      index++;
      setTimeout(addLetter, delay);
    }
  }

  addLetter();
}

spellOutText(textToSpell, 100);